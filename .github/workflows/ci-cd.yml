name: CI/CD
on:
  push:
  workflow_dispatch:
  schedule:
    - cron: '05 10 * * *'
jobs:
  build_aarch64:
    name: Build aarch64
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Get Architecture
        id: get-arch
        run: echo "arch=$(uname -m)" >> $GITHUB_OUTPUT
      - name: Get Date
        id: get-date
        run: echo "date=$(/bin/date -u '+%Y%m%d')" >> $GITHUB_OUTPUT
        shell: bash
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        id: cache
        with:
          path: |
            oci-aarch64/
          key: ${{steps.get-arch.outputs.arch}}-${{steps.get-date.outputs.date}}-${{hashFiles('Containerfile', 'eln.repo')}}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y podman
      - name: Build
        if: steps.cache.outputs.cache-hit != 'true'
        run: sudo podman build --security-opt=label=disable --cap-add=all --device /dev/fuse -t localhost/eln-bootc:aarch64 .
      - name: Save
        if: steps.cache.outputs.cache-hit != 'true'
        run: sudo podman save localhost/eln-bootc:aarch64 --format=oci-dir -o oci-aarch64
      - uses: actions/upload-artifact@v4
        with:
          name: oci-aarch64
          path: oci-aarch64/
  build_x86_64:
    name: Build x86_64
    runs-on: ubuntu-24.04
    steps:
      - name: Get Architecture
        id: get-arch
        run: echo "arch=$(uname -m)" >> $GITHUB_OUTPUT
      - name: Get Date
        id: get-date
        run: |
          echo "date=$(/bin/date -u '+%Y%m%d')" >> $GITHUB_OUTPUT
        shell: bash
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        id: cache
        with:
          path: |
            oci-x86_64/
          key: ${{steps.get-arch.outputs.arch}}-${{steps.get-date.outputs.date}}-${{hashFiles('Containerfile', 'eln.repo')}}
      - name: Build
        if: steps.cache.outputs.cache-hit != 'true'
        run: sudo podman build --security-opt=label=disable --cap-add=all --device /dev/fuse -t localhost/eln-bootc:x86_64 .
      - name: Save
        if: steps.cache.outputs.cache-hit != 'true'
        run: sudo podman save localhost/eln-bootc:x86_64 --format=oci-dir -o oci-x86_64
      - uses: actions/upload-artifact@v4
        with:
          name: oci-x86_64
          path: oci-x86_64/
  push:
    name: Push images
    needs: [build_aarch64, build_x86_64]
    runs-on: ubuntu-24.04
    steps:
      - name: Download aarch64
        uses: actions/download-artifact@v4
        with:
          name: oci-aarch64
          path: oci-aarch64
      - name: Download x86_64
        uses: actions/download-artifact@v4
        with:
          name: oci-x86_64
          path: oci-x86_64
      - name: Create manifest
        run: podman manifest create eln-bootc-manifest
      - name: Add aarch64 to manifest
        run: podman manifest add eln-bootc-manifest oci:$(pwd)/oci-aarch64
      - name: Add x86_64 to manifest
        run: podman manifest add eln-bootc-manifest oci:$(pwd)/oci-x86_64
      - name: Login
        if: github.event_name != 'pull_request' && github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
        run: echo ${{secrets.GITHUB_TOKEN}} | podman login -u ${{github.actor}} --password-stdin ghcr.io
      - name: Push
        if: github.event_name != 'pull_request' && github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
        run: podman manifest push eln-bootc-manifest docker://ghcr.io/charles25565/eln-bootc:latest
